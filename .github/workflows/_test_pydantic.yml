name: Test Pydantic Versions

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      pydantic-version:
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        required: false

env:
  POETRY_VERSION: "1.8.4"

jobs:
  test-pydantic:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11 + Poetry ${{ env.POETRY_VERSION }}
        uses: "./.github/actions/poetry_setup"
        with:
          python-version: "3.11"
          poetry-version: ${{ env.POETRY_VERSION }}
          working-directory: ${{ inputs.working-directory }}
          cache-key: test-pydantic

      - name: Update poetry.lock file
        shell: bash
        run: poetry lock --no-update

      - name: Install dependencies
        shell: bash
        run: |
          poetry install --with test
          # Install specific pydantic version for testing
          poetry run pip install "pydantic==${{ inputs.pydantic-version }}"
          # Ensure langchain-core is compatible with this pydantic version
          poetry run pip install "langchain-core>=0.1.27"

      - name: Run tests
        shell: bash
        run: |
          # Remove asyncio_mode from pyproject.toml if it exists
          sed -i '/asyncio_mode/d' pyproject.toml
          # Run tests
          poetry run pytest tests/ --cov=./ --cov-report=xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ${{ inputs.working-directory }}
          fail_ci_if_error: false 